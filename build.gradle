buildscript {
    ext.vaadinonkotlin_version = '0.4.12'
    ext.vaadin10_version = '10.0.2'
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.51"
    id "org.gretty" version "2.1.0"
    id "io.spring.dependency-management" version "1.0.4.RELEASE"  // remove when https://github.com/gradle/gradle/issues/4417 is fixed
}

apply plugin: 'war'

defaultTasks 'clean', 'build'

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://maven.vaadin.com/vaadin-addons' }
    maven { url 'https://maven.vaadin.com/vaadin-prereleases' }
    maven { url "https://dl.bintray.com/mvysny/vaadin-on-kotlin" }
    maven { url "https://dl.bintray.com/mvysny/github" }
}

gretty {
    contextPath = ''
}

dependencyManagement {
    imports { mavenBom "com.vaadin:vaadin-bom:$vaadin10_version" }
}

test {
    useJUnitPlatform()
        testLogging {
            // to see the exceptions of failed tests in Travis-CI console.
            exceptionFormat 'full'
        }
}

dependencies {
    // Vaadin-on-Kotlin dependency, includes Vaadin
    compile "com.github.vok:vok-framework-v10-sql2o:$vaadinonkotlin_version"
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    // the app-layout custom component
    compile 'org.webjars.bowergithub.polymerelements:app-layout:2.1.0'
    compile 'org.webjars.bowergithub.polymerelements:paper-icon-button:2.2.0'

    // logging
    // currently we are logging through the SLF4J API to LogBack. See src/main/resources/logback.xml file for the logger configuration
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'org.slf4j:slf4j-api:1.7.25'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.51"

    // db
    compile 'org.flywaydb:flyway-core:5.0.7'
    compile 'com.h2database:h2:1.4.196'

    // test support
    testCompile "com.github.kaributesting:karibu-testing-v10:0.4.14"
    testCompile "com.github.mvysny.dynatest:dynatest:0.8"

    // heroku app runner
    testRuntime 'com.github.jsimone:webapp-runner:8.5.30.0'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// Heroku
task stage(dependsOn: ['build'])
task copyToLib(type: Copy) {
    into "$buildDir/server"
    from(configurations.testRuntime) {
        include "webapp-runner*"
    }
}

stage.dependsOn(copyToLib)
